apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-allopen'

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.example.android.kotlin.roomwordssample.OpenClass'
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.example.android.kotlin.roomwordssample"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
}

ext {
    appcompat_version = '1.0.0'
    runner_version = '1.1.0'
    room_version = '2.0.0'
    arch_lifecycle_version = '2.0.0'
    constraintLayout_version = '1.1.0'

    junit_version = '1.2.50'
    truth_tersion = '0.42'

    runner_version = '1.1.0'
    espresso_version = '3.1.0'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:' + appcompat_version

    implementation 'com.google.android.material:material:' + appcompat_version
    implementation 'androidx.annotation:annotation:' + appcompat_version
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout_version"

    // Dependencies for working with Architecture components
    // You'll probably have to update the version numbers in guild.gradle (Project)
    implementation 'androidx.room:room-runtime:' + room_version
    kapt 'androidx.room:room-compiler:' + room_version

    implementation 'androidx.lifecycle:lifecycle-extensions:' + arch_lifecycle_version
    kapt 'androidx.lifecycle:lifecycle-compiler:' + arch_lifecycle_version
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:' + junit_version
    testImplementation 'org.robolectric:robolectric:4.1'
    // Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_lifecycle_version"

    testImplementation 'com.google.truth:truth:' + truth_tersion
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0"

    // Rx Dependencies
    implementation "io.reactivex.rxjava2:rxjava:2.2.4"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.0"
    implementation "io.reactivex.rxjava2:rxkotlin:2.3.0"

    androidTestImplementation 'androidx.test.ext:junit:' + runner_version
    androidTestImplementation 'androidx.room:room-testing:' + room_version
    androidTestImplementation "androidx.arch.core:core-testing:$arch_lifecycle_version"

    androidTestImplementation 'androidx.test:runner:' + runner_version
    androidTestImplementation 'androidx.test:rules:' + runner_version
    // Optional -- UI testing with Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:' + espresso_version
    androidTestImplementation 'androidx.test.espresso:espresso-intents:' + espresso_version
    androidTestImplementation 'com.google.truth:truth:' + truth_tersion

    androidTestImplementation 'org.mockito:mockito-android:2.6.1'


}
